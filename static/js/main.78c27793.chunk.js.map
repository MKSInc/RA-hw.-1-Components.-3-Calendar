{"version":3,"sources":["components/Calendar/CalendarTable/index.js","components/Calendar/CalendarTable/js/CalendarTable.js","components/Calendar/CalendarTable/js/getCalendarWeeks.js","components/Calendar/js/Calendar.js","components/Calendar/index.js","components/Calendar/js/getFormattedDate.js","App.js","index.js"],"names":["CalendarTable","calendarWeeks","date","year","getFullYear","month","getMonth","currDate","getDate","monthStartDate","Date","monthEndDate","monthStartDay","getDay","monthEndDay","monthDaysCount","start","i","calendarWeek","j","isOtherMonth","isCurrDate","push","length","prevMonthDaysCount","getCalendarWeeks","className","span","scope","title","map","week","index","day","Calendar","formattedDate","months","material","header","dayName","monthName","getFormattedDate","App","now","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.78c27793.chunk.js","sourcesContent":["import CalendarTable from './js/CalendarTable';\r\n\r\nexport default CalendarTable;","import getCalendarWeeks from './getCalendarWeeks';\r\n\r\nexport default function CalendarTable({ date }) {\r\n\tconst calendarWeeks = getCalendarWeeks(date);\r\n\r\n\treturn (\r\n\t\t<table className=\"ui-datepicker-calendar\">\r\n\t\t\t<colgroup>\r\n\t\t\t\t<col span={5}/>\r\n\t\t\t\t<col className=\"ui-datepicker-week-end\"/>\r\n\t\t\t\t<col className=\"ui-datepicker-week-end\"/>\r\n\t\t\t</colgroup>\r\n\t\t\t<thead>\r\n\t\t\t<tr>\r\n\t\t\t\t<th scope=\"col\" title=\"Понедельник\">Пн</th>\r\n\t\t\t\t<th scope=\"col\" title=\"Вторник\">Вт</th>\r\n\t\t\t\t<th scope=\"col\" title=\"Среда\">Ср</th>\r\n\t\t\t\t<th scope=\"col\" title=\"Четверг\">Чт</th>\r\n\t\t\t\t<th scope=\"col\" title=\"Пятница\">Пт</th>\r\n\t\t\t\t<th scope=\"col\" title=\"Суббота\">Сб</th>\r\n\t\t\t\t<th scope=\"col\" title=\"Воскресенье\">Вс</th>\r\n\t\t\t</tr>\r\n\t\t\t</thead>\r\n\t\t\t<tbody>\r\n\t\t\t\t{\r\n\t\t\t\t\tcalendarWeeks.map((week, index) =>\r\n\t\t\t\t\t\t<tr key={index}>\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\tweek.map((day, index) =>\r\n\t\t\t\t\t\t\t\t\t<td className={`${day.isOtherMonth ? 'ui-datepicker-other-month' : ''} ${day.isCurrDate ? 'ui-datepicker-today' : ''}`}\r\n\t\t\t\t\t\t\t\t\t\tkey={index}>\r\n\t\t\t\t\t\t\t\t\t\t{day.date}\r\n\t\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t)\r\n\t\t\t\t}\r\n\t\t\t</tbody>\r\n\t\t</table>\r\n\t)\r\n}\r\n","/**\r\n * Генерирует и возвращает массив calendarWeeks.\r\n * Массив calendarWeeks содержит даты всех дней отображаемых в календаре.\r\n * Состоит из массивов calendarWeek.\r\n * Массив calendarWeek соответсвует неделе. 0 элемент - понедельник ... 6 - воскресение.\r\n * Содержит объекты соответствующие датам:\r\n * \t\t{\r\n * \t\t\tdate: число месяца (текущего либо смежных),\r\n * \t\t\tisOtherMonth: true - если это число смежного месяца,\r\n * \t\t}\r\n *\r\n * @param date\r\n * @returns *[]\r\n */\r\n\r\nexport default function getCalendarWeeks(date) {\r\n\tconst\r\n\t\tyear = date.getFullYear(),\r\n\t\tmonth = date.getMonth(),\r\n\t  currDate = date.getDate(), // Текущее число.\r\n\t  monthStartDate = new Date(year, month, 1), // Дата начала месяца.\r\n\t  monthEndDate = new Date(year, month + 1, 0), // Дата конца месяца.\r\n\r\n\t  monthStartDay = monthStartDate.getDay(), // День недели, в который начинается месяц.\r\n\t  monthEndDay = monthEndDate.getDay(), // День недели, в который заканчивается месяц.\r\n\t  monthDaysCount = monthEndDate.getDate(); // Количество дней в месяце.\r\n\r\n\tconst calendarWeeks = [];\r\n\r\n\t// Определяем с какого дня недели начинать заполнять текущий месяц.\r\n\tlet start = monthStartDay - 1;\r\n\tif (monthStartDay === 0) start = 0;\r\n\r\n\t// Заполняем calendarWeeks датами текущего месяца.\r\n\t// i - число месяца (1 ... 31)\r\n\t// j - день недели 0 - понедельник ... 6 - воскресение.\r\n\tfor (let i = 1; i <= monthDaysCount;) {\r\n\t\tconst calendarWeek = [];\r\n\t\tfor (let j = start; j <= 6; j++) {\r\n\t\t\tif (i <= monthDaysCount) {\r\n\t\t\t\tcalendarWeek[j] = {\r\n\t\t\t\t\tdate: i,\r\n\t\t\t\t\tisOtherMonth: false,\r\n\t\t\t\t\tisCurrDate: i === currDate,\r\n\t\t\t\t};\r\n\t\t\t\ti += 1;\r\n\t\t\t}\r\n\t\t}\r\n\t\tstart = 0; // После первой итерации заполнение недели будет начинаться с 0 т.е. с понедельника.\r\n\t\tcalendarWeeks.push(calendarWeek);\r\n\t}\r\n\r\n\t// Если последний день месяца не воскресенье, то нужно добавить даты следующего месяца.\r\n\tif (monthEndDay !== 0) {\r\n\t\tfor (let i = monthEndDay; i <=6; i++) {\r\n\t\t\tcalendarWeeks[calendarWeeks.length - 1].push({\r\n\t\t\t\tdate: i - monthEndDay + 1, // Дата следующего месяца начиная с 1.\r\n\t\t\t\tisOtherMonth: true,\r\n\t\t\t})\r\n\t\t}\r\n\t}\r\n\r\n\t// Если первый день месяца не понедельник, то нужно добавить даты предыдущего месяца.\r\n\tif (monthStartDay !== 1) {\r\n\t\tconst prevMonthDaysCount = new Date(year, month, 0).getDate(); // Количество дней в предыдущем месяце.\r\n\t\tlet start = monthStartDay - 2;\r\n\t\tif (monthStartDay === 0) start = 5;\r\n\r\n\t\tfor (let i = start; i >= 0; i -= 1) {\r\n\t\t\tcalendarWeeks[0][i] = {\r\n\t\t\t\tdate: prevMonthDaysCount + (i - start), // Дата предыдущего месяца начиная с конечной даты.\r\n\t\t\t\tisOtherMonth: true,\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\treturn calendarWeeks;\r\n}","import '../css/calendar.css';\r\nimport PropTypes from 'prop-types';\r\nimport CalendarTable from '../CalendarTable';\r\nimport getFormattedDate from './getFormattedDate';\r\n\r\nfunction Calendar({ date }) {\r\n\tconst formattedDate = getFormattedDate(date);\r\n\r\n\treturn (\r\n\t\t<div className=\"ui-datepicker main__calendar\">\r\n\t\t\t<div className=\"ui-datepicker-material-header\">\r\n\t\t\t\t<div className=\"ui-datepicker-material-day\">{formattedDate.dayName}</div>\r\n\t\t\t\t<div className=\"ui-datepicker-material-date\">\r\n\t\t\t\t\t<div className=\"ui-datepicker-material-day-num\">{formattedDate.date}</div>\r\n\t\t\t\t\t<div className=\"ui-datepicker-material-month\">{formattedDate.monthName.material}</div>\r\n\t\t\t\t\t<div className=\"ui-datepicker-material-year\">{formattedDate.year}</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"ui-datepicker-header\">\r\n\t\t\t\t<div className=\"ui-datepicker-title\">\r\n\t\t\t\t\t<span className=\"ui-datepicker-month\">{formattedDate.monthName.header}</span>&nbsp;\r\n\t\t\t\t\t<span className=\"ui-datepicker-year\">{formattedDate.year}</span>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<CalendarTable date={date}/>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nCalendar.propTypes = {\r\n\tdate: PropTypes.instanceOf(Date).isRequired,\r\n}\r\n\r\nexport default Calendar;","import Calendar from './js/Calendar';\r\n\r\nexport default Calendar;","export default function getFormattedDate(date) {\r\n\tconst day = date.getDay();\r\n\tconst month = date.getMonth();\r\n\tconst days = ['воскресенье', 'понедельник', 'вторник', 'среда', 'четверг', 'пятница', 'суббота'];\r\n\tconst months = {\r\n\t\t0: { material: 'января', header: 'январь'},\r\n\t\t1: { material: 'февраля', header: 'февраль'},\r\n\t\t2: { material: 'марта', header: 'март'},\r\n\t\t3: { material: 'апреля', header: 'апрель'},\r\n\t\t4: { material: 'мая', header: 'май'},\r\n\t\t5: { material: 'июня', header: 'июнь'},\r\n\t\t6: { material: 'июля', header: 'июль'},\r\n\t\t7: { material: 'августа', header: 'август'},\r\n\t\t8: { material: 'сентября', header: 'сентябрь'},\r\n\t\t9: { material: 'октября', header: 'октябрь'},\r\n\t\t10: { material: 'ноября', header: 'ноябрь'},\r\n\t\t11: { material: 'декабря', header: 'декабрь'},\r\n\t}\r\n\r\n\treturn {\r\n\t\tdayName: days[day], // Название дня недели.\r\n\t\tdate: date.getDate(), // Число даты.\r\n\t\t// Название месяца в родительном и именительном падеже.\r\n\t\tmonthName: { material: months[month].material, header: months[month].header},\r\n\t\tyear: date.getFullYear(), // Год даты.\r\n\t}\r\n}\r\n","import Calendar from './components/Calendar';\n\nfunction App() {\n\tconst now = new Date();\n\n\treturn (\n\t\t<>\n\t\t\t<main className={'main'}>\n\t\t\t\t<div className={'main__body _container'}>\n\t\t\t\t\t<Calendar date={now}/>\n\t\t\t\t</div>\n\t\t\t</main>\n\t\t</>\n\t);\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './css/styles.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}